/* Generated by autober: do not modify */
#ifndef _ADF_FCI_H
#define _ADF_FCI_H


#define ADF_LABEL                      (1<<0U)
#define ADF_PRIO                       (1<<1U)
#define ADF_PDOL                       (1<<2U)
#define ADF_LANGUAGE                   (1<<3U)
#define ADF_ISSUER_CODE                (1<<4U)
#define ADF_PNAME                      (1<<5U)
#define ADF_FCI_IDD                    (1<<6U)
#define FCI_IDD_LOG_ENTRY              (1<<0U)


/* Tags for FCI Issuer Discretionary Data */
#define TAG_FCI_IDD_LOG_ENTRY          0x9f4d

/* Tags for FCI Proprietary Template */
#define TAG_ADF_LABEL                  0x0050
#define TAG_ADF_PRIO                   0x0087
#define TAG_ADF_PDOL                   0x9f38
#define TAG_ADF_LANGUAGE               0x5f2d
#define TAG_ADF_ISSUER_CODE            0x9f11
#define TAG_ADF_PNAME                  0x9f12
#define TAG_ADF_FCI_IDD                0xbf0c

/* Tags for File Control Information */
#define TAG_ADF_FCI_DF_NAME            0x0084
#define TAG_ADF_FCI_ADF                0x00a5

/* Tags for root level */
#define TAG_ADF_FCI                    0x006f

struct adf_fci {
	unsigned int _df_name_count;
	uint8_t df_name[16];
	struct adf {
		unsigned int _label_count;
		uint8_t label[16];
		uint8_t prio;
		unsigned int _pdol_count;
		uint8_t pdol[16];
		unsigned int _language_count;
		uint8_t language[16];
		unsigned int _issuer_code_count;
		uint8_t issuer_code[16];
		unsigned int _pname_count;
		uint8_t pname[16];
		struct fci_idd {
			unsigned int _log_entry_count;
			uint8_t log_entry[16];
			unsigned int _present;
		}fci_idd;
		unsigned int _present;
	}adf;
};

struct adf_fci *adf_fci_decode(const uint8_t *ptr, size_t len);
void adf_fci_free(struct adf_fci *adf_fci);
#endif /* _ADF_FCI_H */
